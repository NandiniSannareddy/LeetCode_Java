/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
       ListNode slow=head;
       ListNode fast=head;
       while(fast!=null && fast.next!=null){
        fast=fast.next.next;
        slow=slow.next;
       }
      ListNode second= reverse(slow);
      while(second!=null){
        if(second.val!=head.val)return false;
        second=second.next;
        head=head.next;
      }
      return true;

    }
    ListNode reverse(ListNode slow){
        ListNode prev=null;
        ListNode temp=slow;
        while(temp!=null){
            ListNode front=temp.next;
            temp.next=prev;
            prev=temp;
            temp=front;
        }
        return prev;
    }
}